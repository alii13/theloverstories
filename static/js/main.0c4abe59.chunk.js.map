{"version":3,"sources":["logo.svg","components/feedback/LinearIndeterminate.js","components/widegts/DigitalClock.js","components/layout/PersistentDrawerLeft.js","components/dashboard/Button.js","components/layout/FullWidthGrid.js","components/layout/SimpleContainer.js","components/feedback/Heading.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","width","marginTop","spacing","LinearIndeterminate","classes","className","LinearProgress","DigitalClock","Grommet","grommet","Box","Clock","type","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","PersistentDrawerLeft","useTheme","React","useState","open","setOpen","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Typography","variant","noWrap","style","fontSize","Drawer","anchor","paper","gutterBottom","direction","Divider","List","map","text","index","ListItem","button","key","ListItemIcon","ListItemText","primary","fab","floating","large","node","icon","textAlign","palette","secondary","FullWidthGrid","Grid","container","Hidden","smDown","item","xs","sm","SimpleContainer","xsDown","Fragment","Container","component","backgroundColor","height","Button","Heading","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0c4abe59.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\n\nexport default function LinearIndeterminate() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <LinearProgress />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { storiesOf } from \"@storybook/react\";\n\nimport { Box, Grommet, Clock } from \"grommet\";\nimport { grommet } from \"grommet/themes\";\n\nconst DigitalClock = () => (\n  <Grommet theme={grommet}>\n    <Box>\n      <Clock type=\"digital\" />\n    </Box>\n  </Grommet>\n);\n\nexport default DigitalClock;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport LinearIndeterminate from \"../feedback/LinearIndeterminate\";\nimport Digitalclock from \"../widegts/DigitalClock\";\nimport Icon from \"@material-ui/core/Icon\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n}));\n\nexport default function PersistentDrawerLeft() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h5\" noWrap>\n            Theloverstories\n          </Typography>\n          <FavoriteIcon style={{ fontSize: 30 }}color=\"secondary\" />\n        </Toolbar>\n        <LinearIndeterminate />\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <Typography variant=\"h6\" gutterBottom>\n            The Lover Stories\n          </Typography>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <div className=\"clock\">\n          <Digitalclock />\n        </div>\n        <Divider />\n        <List>\n          {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n              </ListItemIcon>\n\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open\n        })}\n      >\n        <div className={classes.drawerHeader} />\n      </main>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Button, Icon } from \"react-materialize\";\nexport default () => (\n  <Button className=\"red\" fab floating large node=\"button\">\n    <Button\n      className=\"red\"\n      floating\n      icon={<Icon>insert_chart</Icon>}\n      node=\"button\"\n    />\n  </Button>\n);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport SimpleContainer from \"./SimpleContainer\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\n\nexport default function FullWidthGrid() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n        <Hidden smDown>\n          <Grid item xs={1} sm={1}></Grid>\n        </Hidden>\n        <Grid item xs={12} sm={7}>\n          <SimpleContainer />\n        </Grid>\n        <Hidden xsDown>\n          <Grid item xs={0} sm={3}>\n            <SimpleContainer />\n          </Grid>\n        </Hidden>\n        <Hidden xsDown>\n          <Grid item xs={0} sm={1}></Grid>\n        </Hidden>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"../dashboard/Button\";\nimport FullWidthGrid from \"./FullWidthGrid\";\n\nexport default function SimpleContainer() {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container>\n        <Typography\n          component=\"div\"\n          style={{ backgroundColor: \"#cfe8fc\", height: \"100vh\" }}\n        />\n        <Button />\n      </Container>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { Heading } from \"grommet\";\n\nexport default () => (\n  <div className=\"text-center\">\n    <Heading>Read latest love stories</Heading>\n  </div>\n);\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport PersistentDrawerLeft from \"./components/layout/PersistentDrawerLeft\";\nimport \"./App.css\";\nimport Pagination from \"react-materialize/lib/Pagination\";\nimport SimpleContainer from \"./components/layout/SimpleContainer\";\nimport GridAreasAlternative from \"./components/dashboard/GridAreasAlternative\";\nimport { Grommet, Box, Grid } from \"grommet\";\nimport Heading from \"./components/feedback/Heading\";\nimport FullWidthGrid from \"./components/layout/FullWidthGrid\";\nconst DEFAULT_QUERY = \"redux\";\nconst BASE_URL = \"https://hn.algolia.com/api/v1\";\nconst PATH_SEARCH = \"/search\";\nconst PARAM_SEARCH = \"query\";\nconst url = `${BASE_URL}${PATH_SEARCH}?${PARAM_SEARCH}${DEFAULT_QUERY}`;\n//console.log(url);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PersistentDrawerLeft />\n      <Heading />\n      <Box>\n        <FullWidthGrid />\n      </Box>\n      <Pagination />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}